plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.whiteasher'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Security
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // AOP
    // https://mvnrepository.com/artifact/org.springframework/spring-aop
    implementation 'org.springframework:spring-aop'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // database
    // implementation 'mysql:mysql-connector-java:8.0.30'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.2.1'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.1.0"

    // Configuring the Annotation Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Datasource 방식 / URL연결 방식
    implementation 'p6spy:p6spy:3.9.1'
    // SpringBoot 자동설정 방식
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // openapi
    // implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // QUERY DSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // JWT Dependency
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation 'com.google.guava:guava:28.2-jre'
    implementation 'org.apache.commons:commons-lang3:3.9'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'
}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}